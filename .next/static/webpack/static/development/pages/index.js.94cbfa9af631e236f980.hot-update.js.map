{"version":3,"file":"static/webpack/static/development/pages/index.js.94cbfa9af631e236f980.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import MasterPage from '../components/Master';\n\n//importando depedencias\nimport fetch from 'isomorphic-unfetch';\n\n//importando componentes\nimport Precio from '../components/Precio'\n\nconst Index = (props) => (\n    <MasterPage>\n        <div className=\"row\">\n            <div className=\"col-12\">\n                <h2>Precio del Bitcoin</h2>\n                <Precio \n                    precio={props.precioBitcoin}\n                />\n            </div>\n\n            <div className=\"col-md-8\">\n                <h2>Noticias sobre Bitcoin</h2>\n            </div>\n\n            <div className=\"col-md-4\">\n            <h2>Próximos Eventos Bitcoin</h2>\n            </div>\n        </div>\n    </MasterPage> \n);\n\nIndex.getInitialProps = async () => {\n    const precio = await fetch(\"https://api.coindesk.com/v1/bpi/currentprice.json\"); //usando un api diferente porque CoinMarketCap no es fácil de trabajar y cambió desde que se hizo el curso.\n    const resPrecio = await precio.json();\n    \n    //el proyecto en el curso también despliega los cambios en el precio hace 1 hora, hace 24 horas y hace una semana. El API de Coindesk provee el precio hace 24 horas o dentro de un rango de fechas, pero lo que devuelve es una fecha específica y me es difícil sacar el objeto porque cuando la fecha cambie, el objeto en el código no va a cambiar. Por ej. el 28 de febrero hago el query y el histórico a 24 horas me da info con \"2019-02-27\", el cual yo tendría que escribir en alguna variable. Cuando la fecha cambie al 1 de marzo, el código no refleja el precio al 28 de febrero. Por lo tanto, solamente desplegaré el precio del bitcoin al momento.\n\n    return {\n        precioBitcoin: resPrecio.bpi.USD,\n    }\n}\n\nexport default Index;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAfA;AACA;AAoBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AAEA;AAFA;AAOA;AADA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;;;;A","sourceRoot":""}